@charset "utf-8";
/*! button-effects.css © yamoo9.net, 2016 */






.button{
	padding:1em 1.8em;
	border:none;
	cursor:pointer;
}
.button-round{
	border-radius: 3px;
}
.button-rounder{
	border-radius: 7px;
}
.button-roundest{
	border-radius: 10px;
}

button[class*="slide-"]{
	position:relative;
	background-color:#391B6F;
	color:#fff;
	z-index:1;
}
button[class*="slide-"]::before{
	content:'';
	position:absolute;
	transition:all 0.1s;
	z-index:-1;
}
.button.slide-from-left::before{
	top:0;
	right:100%;
	left:0;
	bottom:0;
	background:linear-gradient(90deg, #F2E7A0 50%, #AFCCA7 100%);
}
.button.slide-from-left:hover::before,
.button.slide-from-left:focus::before{
	left:0;
	right:0;
}
/* 
.button
버튼 기본 모듈
.button{
	padding:1em 1.5em;4px 6px;
	border:none;
	border-bottom:2px solid #939393;
	background:#ececec;
	font-size:1rem;
	color:#122122;
	cursor: pointer;
}

.button.button-3d{
	border-bottom:none;
	box-shadow:
		1px 1px 1px #939393,
		2px 2px 1px #939393,
		3px 3px 1px #939393,
		4px 4px 2px #939393,
		5px 5px 3px #939393;
}
.button-round{
	border-radius:3px;
}
.button-rounder{ border-radius: 6px; }
.button-roundest{ border-radius: 12px; }
button.slider-from-
button[class*="slide-"]{
	overflow:hidden;
	position:relative;
	border:2px solid #4a43af;
	background-color:#4a43af;
	color:#fff;
	z-index:5;
	after가 음수값을 가지면 밑으로 내려오게 되는데..
}

button[class*="slide-"]::after{
	content:'';
	position:absolute;
	background-color:red;	
	z-index:-5;
	transition:all 0.2s;
}

button.slide-from-left::after{
	top:0;
	left:-100%;
	right:100%;
	bottom:0;
}
button.slide-from-left:hover::after,
button.slide-from-left:focus::after{
	left:0;
	right:0;
}

button.slide-from-right::after{
	top:0;
	left:100%;
	right:-100%;
	bottom:0;
}
button.slide-from-right:hover::after,
button.slide-from-right:focus::after{
	left:0;
	right:0;
}

button.slide-from-top::after{
	top:-100%;
	left:0;
	right:0;
	bottom:100%;
}
button.slide-from-top:hover::after,
button.slide-from-top:focus::after{
	top:0;
	bottom:0;
}
button.slide-from-bottom::after{
	top:100%;
	left:0;
	right:0;
	bottom:-100%;
}
button.slide-from-bottom:hover::after,
button.slide-from-bottom:focus::after{
	top:0;
	bottom:0;
}

.grow-button-set{
	text-align:center;
	margin-top:50px;
}
.grow-button-set button{margin:0 30px 30px 0;}







button.grow-


button[class*="grow-"] {
  overflow: hidden;
  position: relative;
  z-index: 1;
  border: 4px solid #46d1aa;
  padding: 0.725em 0.9em;
  background: #46d1aa;
  color: #0d392d;
}

button[class*="grow-"]::before {
  content: '';
  position: absolute;
  z-index: -1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: #4ff5c0;
  transition: all 0.3s;
}

.grow-rectangle
button.grow-rectangle::before {
  transform: scale(0);
}

button.grow-rectangle:hover::before,
button.grow-rectangle:focus::before {
  transform: scale(1);
}


.grow-ellipse
button.grow-ellipse::before {
  border-radius: 50%;
  transform: scale(0);
}

button.grow-ellipse:hover::before,
button.grow-ellipse:focus::before {
  transform: scale(1.6);
}

.grow-circle
button.grow-circle::before{
	border-radius: 50%;
	top:50%;
	left:50%;
	width:100px;
	height:100px;
	margin:-50px 0 0 -50px;
	transform:scale(0);
}
button.grow-circle:hover::before,
button.grow-circle:focus::before{
	transform: scale(1.6);
}

.grow-skew
button.grow-skew::before{
	left:50%;
	right:50%;
	transform:skewX(45deg);
}
button.grow-skew:hover::before,
button.grow-skew:focus::before{
	left:-20%;
	right:-20%;
}

.grow-skew-45deg
button.grow-skew-45::before{
	left:50%;
	right:50%;
	transform:skewX(-45deg);
}
button.grow-skew-45:hover::before,
button.grow-skew-45:focus::before{
	left:-20%;
	right:-20%;
}

.grow-spin
button.grow-spin::before {
  transform: rotate(-180deg) scale(0);
}
button.grow-spin:hover::before,
button.grow-spin:focus::before {
  transform: rotate(0deg) scale(1);
}

button.grow-spin-ccw::before {
  transform: rotate(180deg) scale(0);
}
button.grow-spin-ccw:hover::before,
button.grow-spin-ccw:focus::before {
  transform: rotate(0deg) scale(1);
}

.image img{
	position:relative;
	top:0;
	left:50%;
	transform-origin:10px 10px;
	transform: translateY(-113px);
	animation:holdOn 4s infinite alternate cubic-bezier(0.68, 0.18, 0.13, 0.73);
}

 */
 */
/* 
애니메이션 사용법
@keyframe 애니메이션 이름{
	from{ css 속성}
	to {css 속성}
} */

@keyframes holdOn{
	0%{
		transform: translateY(-113px) scale(0.5) rotate(20deg);
	}
	50%{
		transform: translateY(-113px) scale(0.5) rotate(80deg);
	}
	
	100%{
		transform: translateY(-113px) scale(0.5) rotate(20deg);
	}


}


.wrapper .A,.wrapper .B,.wrapper .child{
	width:200px;
	height:200px;
}
.wrapper 